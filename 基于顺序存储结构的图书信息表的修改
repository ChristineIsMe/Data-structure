#include<bits/stdc++.h> 
#define OK 1
#define ERROR 0
#include <iomanip>
using namespace std;
class Book{
	public:
	string number;       //书本数据类型的定义 
	string name;
	float price;
};
class Sqlist{ 
	public:           //顺序表的定义 
	Book *elem;
	int length;
}; 
	float sum=0;
void InitList(Sqlist &L){     //顺序表的初始化 
	L.elem=new Book[1000]; 
	if(!L.elem) exit (OVERFLOW);
	L.length=0;
	return;
} 
void Insert(Sqlist &L){  
	
	for(int i=0;i<1000;i++){
		cin>>L.elem[i].number>>L.elem[i].name>>L.elem[i].price;
		L.length++;
		if(L.elem[i].number=="0"&&L.elem[i].name=="0"&&L.elem[i].price==0)
		{
			L.length--; 
			return;
		}
		
	}
}
/*float everage(Sqlist L){
	float sum=0;
		for(int i=0;i<L.length;i++)
	{
		sum=sum+L.elem[i].price;
	}
	float ever=sum/L.length;
	return ever;
}*/
void Increase(Sqlist &L){
	//float sum=0;
		for(int i=0;i<L.length;i++)
	{
		sum=sum+L.elem[i].price;
	}
	sum=sum/L.length;
	for(int i=0;i<L.length;i++)
	{
		if(L.elem[i].price<sum)
		{
			L.elem[i].price=L.elem[i].price*1.2;
		}
		else
		    L.elem[i].price=L.elem[i].price*1.1;
	}
	return;
}
void Output(Sqlist L){
	cout<<fixed<<setprecision(2)<<sum<<endl;
	for(int i=0;i<L.length;i++){
		cout<<L.elem[i].number<<" "<<L.elem[i].name<<" "<<fixed<<setprecision(2)<<L.elem[i].price<<endl;
	}
}
int main(){
	Sqlist L;
	InitList(L);
	Insert(L);
	Increase(L);
	Output(L);
}
